package cmd

import (
	_ "basket-discount-api/docs" // docs is generated by Swag CLI, you have to import it.
	"basket-discount-api/internal/discount"
	"basket-discount-api/internal/discount/controller"
	"basket-discount-api/internal/discount/repositories"
	"fmt"
	"github.com/labstack/echo/v4"
	"github.com/spf13/cobra"
	echoSwagger "github.com/swaggo/echo-swagger"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

type api struct {
	context *echo.Echo
	command *cobra.Command
	Port    string
}

var apiCmd = &api{
	command: &cobra.Command{
		Use:   "api",
		Short: "Basket-Discount API",
	},
	Port: "5000",
}

func init() {
	RootCommand.cobraCommand.AddCommand(apiCmd.command)
	apiCmd.command.Flags().StringVarP(&apiCmd.Port, "port", "p", "5000", "Service Port")

	apiCmd.context = echo.New()
	apiCmd.context.Debug = RootCommand.DebugMode
	apiCmd.context.HideBanner = !RootCommand.DebugMode
	apiCmd.context.HidePort = !RootCommand.DebugMode

	apiCmd.command.RunE = func(cmd *cobra.Command, args []string) error {
		fmt.Println("Basket-Discount-API is running")

		conn := fmt.Sprintf("host=%s user=%s password=%s dbname=%s port=%s sslmode=disable",
			RootCommand.AppConfig.DiscountDbSettings.Host,
			RootCommand.AppConfig.DiscountDbSettings.User,
			RootCommand.AppConfig.DiscountDbSettings.Pass,
			RootCommand.AppConfig.DiscountDbSettings.DbName,
			RootCommand.AppConfig.DiscountDbSettings.Port,
		)
		db, err := gorm.Open(postgres.Open(conn), &gorm.Config{})
		if err != nil {
			return err
		}
		campaignRepo := repositories.NewCampaignRepo(db)
		discountService := discount.NewService(campaignRepo)
		discountController := controller.NewController(discountService)
		controller.MakeDiscountHandler(apiCmd.context, discountController)
		apiCmd.context.GET("/swagger/*", echoSwagger.WrapHandler)
		if err := apiCmd.context.Start(fmt.Sprintf(":%s", apiCmd.Port)); err != nil {
			fmt.Printf("Failed to shutting down the server. Error:%v", err)
		}
		return nil
	}
}
